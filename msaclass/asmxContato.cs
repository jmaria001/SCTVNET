//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:2.0.50727.5485
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace MSAClass.AsmxContato {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="asmxContatoSoap", Namespace="http://tempuri.org/")]
    public partial class asmxContato : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthSoapHd authSoapHdValueField;
        
        private System.Threading.SendOrPostCallback spuCarregarOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuCarregar1OperationCompleted;
        
        private System.Threading.SendOrPostCallback spuAtualizarOperationCompleted;
        
        /// <remarks/>
        public asmxContato() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["url_AsmxContato"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://localhost/WebServiceMSA/AsmxContato.asmx";
            }
        }
        
        public AuthSoapHd AuthSoapHdValue {
            get {
                return this.authSoapHdValueField;
            }
            set {
                this.authSoapHdValueField = value;
            }
        }
        
        /// <remarks/>
        public event spuCarregarCompletedEventHandler spuCarregarCompleted;
        
        /// <remarks/>
        public event spuCarregar1CompletedEventHandler spuCarregar1Completed;
        
        /// <remarks/>
        public event spuAtualizarCompletedEventHandler spuAtualizarCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuCarregar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dtsContato spuCarregar(string strCodContato) {
            object[] results = this.Invoke("spuCarregar", new object[] {
                        strCodContato});
            return ((dtsContato)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuCarregar(string strCodContato, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuCarregar", new object[] {
                        strCodContato}, callback, asyncState);
        }
        
        /// <remarks/>
        public dtsContato EndspuCarregar(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((dtsContato)(results[0]));
        }
        
        /// <remarks/>
        public void spuCarregarAsync(string strCodContato) {
            this.spuCarregarAsync(strCodContato, null);
        }
        
        /// <remarks/>
        public void spuCarregarAsync(string strCodContato, object userState) {
            if ((this.spuCarregarOperationCompleted == null)) {
                this.spuCarregarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuCarregarOperationCompleted);
            }
            this.InvokeAsync("spuCarregar", new object[] {
                        strCodContato}, this.spuCarregarOperationCompleted, userState);
        }
        
        private void OnspuCarregarOperationCompleted(object arg) {
            if ((this.spuCarregarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuCarregarCompleted(this, new spuCarregarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="spuCarregar1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuCarregar_ContatoEmpresa", RequestElementName="spuCarregar_ContatoEmpresa", RequestNamespace="http://tempuri.org/", ResponseElementName="spuCarregar_ContatoEmpresaResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("spuCarregar_ContatoEmpresaResult")]
        public dtsContato spuCarregar(string strCodContato, string strCodEmpresa) {
            object[] results = this.Invoke("spuCarregar1", new object[] {
                        strCodContato,
                        strCodEmpresa});
            return ((dtsContato)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuCarregar1(string strCodContato, string strCodEmpresa, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuCarregar1", new object[] {
                        strCodContato,
                        strCodEmpresa}, callback, asyncState);
        }
        
        /// <remarks/>
        public dtsContato EndspuCarregar1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((dtsContato)(results[0]));
        }
        
        /// <remarks/>
        public void spuCarregar1Async(string strCodContato, string strCodEmpresa) {
            this.spuCarregar1Async(strCodContato, strCodEmpresa, null);
        }
        
        /// <remarks/>
        public void spuCarregar1Async(string strCodContato, string strCodEmpresa, object userState) {
            if ((this.spuCarregar1OperationCompleted == null)) {
                this.spuCarregar1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuCarregar1OperationCompleted);
            }
            this.InvokeAsync("spuCarregar1", new object[] {
                        strCodContato,
                        strCodEmpresa}, this.spuCarregar1OperationCompleted, userState);
        }
        
        private void OnspuCarregar1OperationCompleted(object arg) {
            if ((this.spuCarregar1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuCarregar1Completed(this, new spuCarregar1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuAtualizar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void spuAtualizar(dtsContato dtsContato, string cod_Contato) {
            this.Invoke("spuAtualizar", new object[] {
                        dtsContato,
                        cod_Contato});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuAtualizar(dtsContato dtsContato, string cod_Contato, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuAtualizar", new object[] {
                        dtsContato,
                        cod_Contato}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndspuAtualizar(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void spuAtualizarAsync(dtsContato dtsContato, string cod_Contato) {
            this.spuAtualizarAsync(dtsContato, cod_Contato, null);
        }
        
        /// <remarks/>
        public void spuAtualizarAsync(dtsContato dtsContato, string cod_Contato, object userState) {
            if ((this.spuAtualizarOperationCompleted == null)) {
                this.spuAtualizarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuAtualizarOperationCompleted);
            }
            this.InvokeAsync("spuAtualizar", new object[] {
                        dtsContato,
                        cod_Contato}, this.spuAtualizarOperationCompleted, userState);
        }
        
        private void OnspuAtualizarOperationCompleted(object arg) {
            if ((this.spuAtualizarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuAtualizarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthSoapHd : System.Web.Services.Protocols.SoapHeader {
        
        private string strUserNameField;
        
        private string strPasswordField;
        
        private string strKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string strUserName {
            get {
                return this.strUserNameField;
            }
            set {
                this.strUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string strPassword {
            get {
                return this.strPasswordField;
            }
            set {
                this.strPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string strKey {
            get {
                return this.strKeyField;
            }
            set {
                this.strKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // A definição deste tipo foi gerada pela extensão do importador do esquema System.Data.Design.TypedDataSetSchemaImporterExtension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dtsContato")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dtsContato : global::System.Data.DataSet {
        
        private dtbContato_EmpresaDataTable tabledtbContato_Empresa;
        
        private dtbContatoDataTable tabledtbContato;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtsContato() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dtsContato(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtbContato_Empresa"] != null)) {
                    base.Tables.Add(new dtbContato_EmpresaDataTable(ds.Tables["dtbContato_Empresa"]));
                }
                if ((ds.Tables["dtbContato"] != null)) {
                    base.Tables.Add(new dtbContatoDataTable(ds.Tables["dtbContato"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbContato_EmpresaDataTable dtbContato_Empresa {
            get {
                return this.tabledtbContato_Empresa;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbContatoDataTable dtbContato {
            get {
                return this.tabledtbContato;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dtsContato cln = ((dtsContato)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtbContato_Empresa"] != null)) {
                    base.Tables.Add(new dtbContato_EmpresaDataTable(ds.Tables["dtbContato_Empresa"]));
                }
                if ((ds.Tables["dtbContato"] != null)) {
                    base.Tables.Add(new dtbContatoDataTable(ds.Tables["dtbContato"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtbContato_Empresa = ((dtbContato_EmpresaDataTable)(base.Tables["dtbContato_Empresa"]));
            if ((initTable == true)) {
                if ((this.tabledtbContato_Empresa != null)) {
                    this.tabledtbContato_Empresa.InitVars();
                }
            }
            this.tabledtbContato = ((dtbContatoDataTable)(base.Tables["dtbContato"]));
            if ((initTable == true)) {
                if ((this.tabledtbContato != null)) {
                    this.tabledtbContato.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dtsContato";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dtsContato.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("en-US");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtbContato_Empresa = new dtbContato_EmpresaDataTable();
            base.Tables.Add(this.tabledtbContato_Empresa);
            this.tabledtbContato = new dtbContatoDataTable();
            base.Tables.Add(this.tabledtbContato);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbContato_Empresa() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbContato() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dtsContato ds = new dtsContato();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtbContato_EmpresaRowChangeEventHandler(object sender, dtbContato_EmpresaRowChangeEvent e);
        
        public delegate void dtbContatoRowChangeEventHandler(object sender, dtbContatoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbContato_EmpresaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCod_Empresa;
            
            private global::System.Data.DataColumn columnRazao_Social;
            
            private global::System.Data.DataColumn columnIndica_Utilizacao_SCTV;
            
            private global::System.Data.DataColumn columnIndica_Associado;
            
            private global::System.Data.DataColumn columnEMPRESA;
            
            private global::System.Data.DataColumn columnCod_Contato;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContato_EmpresaDataTable() {
                this.TableName = "dtbContato_Empresa";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbContato_EmpresaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbContato_EmpresaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_EmpresaColumn {
                get {
                    return this.columnCod_Empresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Razao_SocialColumn {
                get {
                    return this.columnRazao_Social;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_Utilizacao_SCTVColumn {
                get {
                    return this.columnIndica_Utilizacao_SCTV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_AssociadoColumn {
                get {
                    return this.columnIndica_Associado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMPRESAColumn {
                get {
                    return this.columnEMPRESA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_ContatoColumn {
                get {
                    return this.columnCod_Contato;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContato_EmpresaRow this[int index] {
                get {
                    return ((dtbContato_EmpresaRow)(this.Rows[index]));
                }
            }
            
            public event dtbContato_EmpresaRowChangeEventHandler dtbContato_EmpresaRowChanging;
            
            public event dtbContato_EmpresaRowChangeEventHandler dtbContato_EmpresaRowChanged;
            
            public event dtbContato_EmpresaRowChangeEventHandler dtbContato_EmpresaRowDeleting;
            
            public event dtbContato_EmpresaRowChangeEventHandler dtbContato_EmpresaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbContato_EmpresaRow(dtbContato_EmpresaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContato_EmpresaRow AdddtbContato_EmpresaRow(string Cod_Empresa, string Razao_Social, bool Indica_Utilizacao_SCTV, bool Indica_Associado, string EMPRESA, string Cod_Contato) {
                dtbContato_EmpresaRow rowdtbContato_EmpresaRow = ((dtbContato_EmpresaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cod_Empresa,
                        Razao_Social,
                        Indica_Utilizacao_SCTV,
                        Indica_Associado,
                        EMPRESA,
                        Cod_Contato};
                rowdtbContato_EmpresaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbContato_EmpresaRow);
                return rowdtbContato_EmpresaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbContato_EmpresaDataTable cln = ((dtbContato_EmpresaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbContato_EmpresaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCod_Empresa = base.Columns["Cod_Empresa"];
                this.columnRazao_Social = base.Columns["Razao_Social"];
                this.columnIndica_Utilizacao_SCTV = base.Columns["Indica_Utilizacao_SCTV"];
                this.columnIndica_Associado = base.Columns["Indica_Associado"];
                this.columnEMPRESA = base.Columns["EMPRESA"];
                this.columnCod_Contato = base.Columns["Cod_Contato"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCod_Empresa = new global::System.Data.DataColumn("Cod_Empresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Empresa);
                this.columnRazao_Social = new global::System.Data.DataColumn("Razao_Social", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRazao_Social);
                this.columnIndica_Utilizacao_SCTV = new global::System.Data.DataColumn("Indica_Utilizacao_SCTV", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Utilizacao_SCTV);
                this.columnIndica_Associado = new global::System.Data.DataColumn("Indica_Associado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Associado);
                this.columnEMPRESA = new global::System.Data.DataColumn("EMPRESA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPRESA);
                this.columnCod_Contato = new global::System.Data.DataColumn("Cod_Contato", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Contato);
                this.columnCod_Empresa.AllowDBNull = false;
                this.columnCod_Empresa.MaxLength = 3;
                this.columnRazao_Social.AllowDBNull = false;
                this.columnRazao_Social.MaxLength = 50;
                this.columnIndica_Utilizacao_SCTV.AllowDBNull = false;
                this.columnEMPRESA.ReadOnly = true;
                this.columnEMPRESA.MaxLength = 56;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContato_EmpresaRow NewdtbContato_EmpresaRow() {
                return ((dtbContato_EmpresaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbContato_EmpresaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbContato_EmpresaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbContato_EmpresaRowChanged != null)) {
                    this.dtbContato_EmpresaRowChanged(this, new dtbContato_EmpresaRowChangeEvent(((dtbContato_EmpresaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbContato_EmpresaRowChanging != null)) {
                    this.dtbContato_EmpresaRowChanging(this, new dtbContato_EmpresaRowChangeEvent(((dtbContato_EmpresaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbContato_EmpresaRowDeleted != null)) {
                    this.dtbContato_EmpresaRowDeleted(this, new dtbContato_EmpresaRowChangeEvent(((dtbContato_EmpresaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbContato_EmpresaRowDeleting != null)) {
                    this.dtbContato_EmpresaRowDeleting(this, new dtbContato_EmpresaRowChangeEvent(((dtbContato_EmpresaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbContato_EmpresaRow(dtbContato_EmpresaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsContato ds = new dtsContato();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbContato_EmpresaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbContatoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCod_Contato;
            
            private global::System.Data.DataColumn columnNome;
            
            private global::System.Data.DataColumn columnCGC;
            
            private global::System.Data.DataColumn columnIndica_Cic_Cgc;
            
            private global::System.Data.DataColumn columnCod_Representante;
            
            private global::System.Data.DataColumn columnCod_Usuario_Inclusao;
            
            private global::System.Data.DataColumn columnCod_Usuario_Desativacao;
            
            private global::System.Data.DataColumn columnData_Desativacao;
            
            private global::System.Data.DataColumn columnEmail_Notificacao;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContatoDataTable() {
                this.TableName = "dtbContato";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbContatoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbContatoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_ContatoColumn {
                get {
                    return this.columnCod_Contato;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NomeColumn {
                get {
                    return this.columnNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CGCColumn {
                get {
                    return this.columnCGC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_Cic_CgcColumn {
                get {
                    return this.columnIndica_Cic_Cgc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_RepresentanteColumn {
                get {
                    return this.columnCod_Representante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_Usuario_InclusaoColumn {
                get {
                    return this.columnCod_Usuario_Inclusao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_Usuario_DesativacaoColumn {
                get {
                    return this.columnCod_Usuario_Desativacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Data_DesativacaoColumn {
                get {
                    return this.columnData_Desativacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Email_NotificacaoColumn {
                get {
                    return this.columnEmail_Notificacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContatoRow this[int index] {
                get {
                    return ((dtbContatoRow)(this.Rows[index]));
                }
            }
            
            public event dtbContatoRowChangeEventHandler dtbContatoRowChanging;
            
            public event dtbContatoRowChangeEventHandler dtbContatoRowChanged;
            
            public event dtbContatoRowChangeEventHandler dtbContatoRowDeleting;
            
            public event dtbContatoRowChangeEventHandler dtbContatoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbContatoRow(dtbContatoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContatoRow AdddtbContatoRow(string Cod_Contato, string Nome, string CGC, int Indica_Cic_Cgc, int Cod_Representante, string Cod_Usuario_Inclusao, string Cod_Usuario_Desativacao, System.DateTime Data_Desativacao, string Email_Notificacao) {
                dtbContatoRow rowdtbContatoRow = ((dtbContatoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cod_Contato,
                        Nome,
                        CGC,
                        Indica_Cic_Cgc,
                        Cod_Representante,
                        Cod_Usuario_Inclusao,
                        Cod_Usuario_Desativacao,
                        Data_Desativacao,
                        Email_Notificacao};
                rowdtbContatoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbContatoRow);
                return rowdtbContatoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContatoRow FindByCod_Contato(string Cod_Contato) {
                return ((dtbContatoRow)(this.Rows.Find(new object[] {
                            Cod_Contato})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbContatoDataTable cln = ((dtbContatoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbContatoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCod_Contato = base.Columns["Cod_Contato"];
                this.columnNome = base.Columns["Nome"];
                this.columnCGC = base.Columns["CGC"];
                this.columnIndica_Cic_Cgc = base.Columns["Indica_Cic_Cgc"];
                this.columnCod_Representante = base.Columns["Cod_Representante"];
                this.columnCod_Usuario_Inclusao = base.Columns["Cod_Usuario_Inclusao"];
                this.columnCod_Usuario_Desativacao = base.Columns["Cod_Usuario_Desativacao"];
                this.columnData_Desativacao = base.Columns["Data_Desativacao"];
                this.columnEmail_Notificacao = base.Columns["Email_Notificacao"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCod_Contato = new global::System.Data.DataColumn("Cod_Contato", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Contato);
                this.columnNome = new global::System.Data.DataColumn("Nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNome);
                this.columnCGC = new global::System.Data.DataColumn("CGC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCGC);
                this.columnIndica_Cic_Cgc = new global::System.Data.DataColumn("Indica_Cic_Cgc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Cic_Cgc);
                this.columnCod_Representante = new global::System.Data.DataColumn("Cod_Representante", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Representante);
                this.columnCod_Usuario_Inclusao = new global::System.Data.DataColumn("Cod_Usuario_Inclusao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Usuario_Inclusao);
                this.columnCod_Usuario_Desativacao = new global::System.Data.DataColumn("Cod_Usuario_Desativacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Usuario_Desativacao);
                this.columnData_Desativacao = new global::System.Data.DataColumn("Data_Desativacao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_Desativacao);
                this.columnEmail_Notificacao = new global::System.Data.DataColumn("Email_Notificacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail_Notificacao);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCod_Contato}, true));
                this.columnCod_Contato.AllowDBNull = false;
                this.columnCod_Contato.Unique = true;
                this.columnCod_Contato.MaxLength = 5;
                this.columnNome.AllowDBNull = false;
                this.columnNome.MaxLength = 30;
                this.columnCGC.MaxLength = 18;
                this.columnCod_Representante.DefaultValue = ((int)(0));
                this.columnCod_Usuario_Inclusao.MaxLength = 30;
                this.columnCod_Usuario_Desativacao.MaxLength = 30;
                this.columnData_Desativacao.DateTimeMode = global::System.Data.DataSetDateTime.Unspecified;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContatoRow NewdtbContatoRow() {
                return ((dtbContatoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbContatoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbContatoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbContatoRowChanged != null)) {
                    this.dtbContatoRowChanged(this, new dtbContatoRowChangeEvent(((dtbContatoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbContatoRowChanging != null)) {
                    this.dtbContatoRowChanging(this, new dtbContatoRowChangeEvent(((dtbContatoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbContatoRowDeleted != null)) {
                    this.dtbContatoRowDeleted(this, new dtbContatoRowChangeEvent(((dtbContatoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbContatoRowDeleting != null)) {
                    this.dtbContatoRowDeleting(this, new dtbContatoRowChangeEvent(((dtbContatoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbContatoRow(dtbContatoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsContato ds = new dtsContato();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbContatoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbContato_EmpresaRow : global::System.Data.DataRow {
            
            private dtbContato_EmpresaDataTable tabledtbContato_Empresa;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbContato_EmpresaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbContato_Empresa = ((dtbContato_EmpresaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Empresa {
                get {
                    return ((string)(this[this.tabledtbContato_Empresa.Cod_EmpresaColumn]));
                }
                set {
                    this[this.tabledtbContato_Empresa.Cod_EmpresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Razao_Social {
                get {
                    return ((string)(this[this.tabledtbContato_Empresa.Razao_SocialColumn]));
                }
                set {
                    this[this.tabledtbContato_Empresa.Razao_SocialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Utilizacao_SCTV {
                get {
                    return ((bool)(this[this.tabledtbContato_Empresa.Indica_Utilizacao_SCTVColumn]));
                }
                set {
                    this[this.tabledtbContato_Empresa.Indica_Utilizacao_SCTVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Associado {
                get {
                    try {
                        return ((bool)(this[this.tabledtbContato_Empresa.Indica_AssociadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Indica_Associado\' na tabela \'dtbContato_Empresa\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato_Empresa.Indica_AssociadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPRESA {
                get {
                    try {
                        return ((string)(this[this.tabledtbContato_Empresa.EMPRESAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'EMPRESA\' na tabela \'dtbContato_Empresa\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato_Empresa.EMPRESAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Contato {
                get {
                    try {
                        return ((string)(this[this.tabledtbContato_Empresa.Cod_ContatoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Cod_Contato\' na tabela \'dtbContato_Empresa\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato_Empresa.Cod_ContatoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndica_AssociadoNull() {
                return this.IsNull(this.tabledtbContato_Empresa.Indica_AssociadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndica_AssociadoNull() {
                this[this.tabledtbContato_Empresa.Indica_AssociadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPRESANull() {
                return this.IsNull(this.tabledtbContato_Empresa.EMPRESAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPRESANull() {
                this[this.tabledtbContato_Empresa.EMPRESAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_ContatoNull() {
                return this.IsNull(this.tabledtbContato_Empresa.Cod_ContatoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_ContatoNull() {
                this[this.tabledtbContato_Empresa.Cod_ContatoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbContatoRow : global::System.Data.DataRow {
            
            private dtbContatoDataTable tabledtbContato;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbContatoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbContato = ((dtbContatoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Contato {
                get {
                    return ((string)(this[this.tabledtbContato.Cod_ContatoColumn]));
                }
                set {
                    this[this.tabledtbContato.Cod_ContatoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nome {
                get {
                    return ((string)(this[this.tabledtbContato.NomeColumn]));
                }
                set {
                    this[this.tabledtbContato.NomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CGC {
                get {
                    try {
                        return ((string)(this[this.tabledtbContato.CGCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'CGC\' na tabela \'dtbContato\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato.CGCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Indica_Cic_Cgc {
                get {
                    try {
                        return ((int)(this[this.tabledtbContato.Indica_Cic_CgcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Indica_Cic_Cgc\' na tabela \'dtbContato\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato.Indica_Cic_CgcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_Representante {
                get {
                    try {
                        return ((int)(this[this.tabledtbContato.Cod_RepresentanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Cod_Representante\' na tabela \'dtbContato\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato.Cod_RepresentanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Usuario_Inclusao {
                get {
                    try {
                        return ((string)(this[this.tabledtbContato.Cod_Usuario_InclusaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Cod_Usuario_Inclusao\' na tabela \'dtbContato\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato.Cod_Usuario_InclusaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Usuario_Desativacao {
                get {
                    try {
                        return ((string)(this[this.tabledtbContato.Cod_Usuario_DesativacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Cod_Usuario_Desativacao\' na tabela \'dtbContato\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato.Cod_Usuario_DesativacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Data_Desativacao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtbContato.Data_DesativacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Data_Desativacao\' na tabela \'dtbContato\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato.Data_DesativacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email_Notificacao {
                get {
                    try {
                        return ((string)(this[this.tabledtbContato.Email_NotificacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Email_Notificacao\' na tabela \'dtbContato\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbContato.Email_NotificacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCGCNull() {
                return this.IsNull(this.tabledtbContato.CGCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCGCNull() {
                this[this.tabledtbContato.CGCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndica_Cic_CgcNull() {
                return this.IsNull(this.tabledtbContato.Indica_Cic_CgcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndica_Cic_CgcNull() {
                this[this.tabledtbContato.Indica_Cic_CgcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_RepresentanteNull() {
                return this.IsNull(this.tabledtbContato.Cod_RepresentanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_RepresentanteNull() {
                this[this.tabledtbContato.Cod_RepresentanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_Usuario_InclusaoNull() {
                return this.IsNull(this.tabledtbContato.Cod_Usuario_InclusaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_Usuario_InclusaoNull() {
                this[this.tabledtbContato.Cod_Usuario_InclusaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_Usuario_DesativacaoNull() {
                return this.IsNull(this.tabledtbContato.Cod_Usuario_DesativacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_Usuario_DesativacaoNull() {
                this[this.tabledtbContato.Cod_Usuario_DesativacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsData_DesativacaoNull() {
                return this.IsNull(this.tabledtbContato.Data_DesativacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetData_DesativacaoNull() {
                this[this.tabledtbContato.Data_DesativacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmail_NotificacaoNull() {
                return this.IsNull(this.tabledtbContato.Email_NotificacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmail_NotificacaoNull() {
                this[this.tabledtbContato.Email_NotificacaoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbContato_EmpresaRowChangeEvent : global::System.EventArgs {
            
            private dtbContato_EmpresaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContato_EmpresaRowChangeEvent(dtbContato_EmpresaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContato_EmpresaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbContatoRowChangeEvent : global::System.EventArgs {
            
            private dtbContatoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContatoRowChangeEvent(dtbContatoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbContatoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuCarregarCompletedEventHandler(object sender, spuCarregarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuCarregarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuCarregarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dtsContato Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dtsContato)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuCarregar1CompletedEventHandler(object sender, spuCarregar1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuCarregar1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuCarregar1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dtsContato Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dtsContato)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuAtualizarCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
