//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:2.0.50727.5485
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace MSAClass.AsmxGeneric {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="asmxGenericSoap", Namespace="http://tempuri.org/")]
    public partial class asmxGeneric : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthSoapHd authSoapHdValueField;
        
        private System.Threading.SendOrPostCallback spuSelectMacAdressOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuInsertEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuInsertMacAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback TesteOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnServerNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnDataBaseNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnParametrosGeraisOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSqlExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnFiltroCarregarOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback fnSqlComandoOperationCompleted;
        
        /// <remarks/>
        public asmxGeneric() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["url_AsmxGeneric"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://localhost/WebServiceMSA/AsmxGeneric.asmx";
            }
        }
        
        public AuthSoapHd AuthSoapHdValue {
            get {
                return this.authSoapHdValueField;
            }
            set {
                this.authSoapHdValueField = value;
            }
        }
        
        /// <remarks/>
        public event spuSelectMacAdressCompletedEventHandler spuSelectMacAdressCompleted;
        
        /// <remarks/>
        public event spuInsertEmailCompletedEventHandler spuInsertEmailCompleted;
        
        /// <remarks/>
        public event spuInsertMacAddressCompletedEventHandler spuInsertMacAddressCompleted;
        
        /// <remarks/>
        public event TesteCompletedEventHandler TesteCompleted;
        
        /// <remarks/>
        public event fnServerNameCompletedEventHandler fnServerNameCompleted;
        
        /// <remarks/>
        public event fnDataBaseNameCompletedEventHandler fnDataBaseNameCompleted;
        
        /// <remarks/>
        public event fnParametrosGeraisCompletedEventHandler fnParametrosGeraisCompleted;
        
        /// <remarks/>
        public event fnSqlExecuteCompletedEventHandler fnSqlExecuteCompleted;
        
        /// <remarks/>
        public event fnFiltroCarregarCompletedEventHandler fnFiltroCarregarCompleted;
        
        /// <remarks/>
        public event fnSendEmailCompletedEventHandler fnSendEmailCompleted;
        
        /// <remarks/>
        public event fnSqlComandoCompletedEventHandler fnSqlComandoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuSelectMacAdress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool spuSelectMacAdress(string pMac, int pFlag) {
            object[] results = this.Invoke("spuSelectMacAdress", new object[] {
                        pMac,
                        pFlag});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuSelectMacAdress(string pMac, int pFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuSelectMacAdress", new object[] {
                        pMac,
                        pFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndspuSelectMacAdress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void spuSelectMacAdressAsync(string pMac, int pFlag) {
            this.spuSelectMacAdressAsync(pMac, pFlag, null);
        }
        
        /// <remarks/>
        public void spuSelectMacAdressAsync(string pMac, int pFlag, object userState) {
            if ((this.spuSelectMacAdressOperationCompleted == null)) {
                this.spuSelectMacAdressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuSelectMacAdressOperationCompleted);
            }
            this.InvokeAsync("spuSelectMacAdress", new object[] {
                        pMac,
                        pFlag}, this.spuSelectMacAdressOperationCompleted, userState);
        }
        
        private void OnspuSelectMacAdressOperationCompleted(object arg) {
            if ((this.spuSelectMacAdressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuSelectMacAdressCompleted(this, new spuSelectMacAdressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuInsertEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int spuInsertEmail(string Email_Remetente, string Email_Destinatario, string Email_ComCopia, string Desc_Assunto, string Desc_CorpoEmail, int ID_Usuario) {
            object[] results = this.Invoke("spuInsertEmail", new object[] {
                        Email_Remetente,
                        Email_Destinatario,
                        Email_ComCopia,
                        Desc_Assunto,
                        Desc_CorpoEmail,
                        ID_Usuario});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuInsertEmail(string Email_Remetente, string Email_Destinatario, string Email_ComCopia, string Desc_Assunto, string Desc_CorpoEmail, int ID_Usuario, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuInsertEmail", new object[] {
                        Email_Remetente,
                        Email_Destinatario,
                        Email_ComCopia,
                        Desc_Assunto,
                        Desc_CorpoEmail,
                        ID_Usuario}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndspuInsertEmail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void spuInsertEmailAsync(string Email_Remetente, string Email_Destinatario, string Email_ComCopia, string Desc_Assunto, string Desc_CorpoEmail, int ID_Usuario) {
            this.spuInsertEmailAsync(Email_Remetente, Email_Destinatario, Email_ComCopia, Desc_Assunto, Desc_CorpoEmail, ID_Usuario, null);
        }
        
        /// <remarks/>
        public void spuInsertEmailAsync(string Email_Remetente, string Email_Destinatario, string Email_ComCopia, string Desc_Assunto, string Desc_CorpoEmail, int ID_Usuario, object userState) {
            if ((this.spuInsertEmailOperationCompleted == null)) {
                this.spuInsertEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuInsertEmailOperationCompleted);
            }
            this.InvokeAsync("spuInsertEmail", new object[] {
                        Email_Remetente,
                        Email_Destinatario,
                        Email_ComCopia,
                        Desc_Assunto,
                        Desc_CorpoEmail,
                        ID_Usuario}, this.spuInsertEmailOperationCompleted, userState);
        }
        
        private void OnspuInsertEmailOperationCompleted(object arg) {
            if ((this.spuInsertEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuInsertEmailCompleted(this, new spuInsertEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuInsertMacAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int spuInsertMacAddress(string pMac, string pCPU, string pComputador, string pUser_Name, string pEmail_User, string pEmp_User, string pCidade, string pVeic_User, string pObs) {
            object[] results = this.Invoke("spuInsertMacAddress", new object[] {
                        pMac,
                        pCPU,
                        pComputador,
                        pUser_Name,
                        pEmail_User,
                        pEmp_User,
                        pCidade,
                        pVeic_User,
                        pObs});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuInsertMacAddress(string pMac, string pCPU, string pComputador, string pUser_Name, string pEmail_User, string pEmp_User, string pCidade, string pVeic_User, string pObs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuInsertMacAddress", new object[] {
                        pMac,
                        pCPU,
                        pComputador,
                        pUser_Name,
                        pEmail_User,
                        pEmp_User,
                        pCidade,
                        pVeic_User,
                        pObs}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndspuInsertMacAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void spuInsertMacAddressAsync(string pMac, string pCPU, string pComputador, string pUser_Name, string pEmail_User, string pEmp_User, string pCidade, string pVeic_User, string pObs) {
            this.spuInsertMacAddressAsync(pMac, pCPU, pComputador, pUser_Name, pEmail_User, pEmp_User, pCidade, pVeic_User, pObs, null);
        }
        
        /// <remarks/>
        public void spuInsertMacAddressAsync(string pMac, string pCPU, string pComputador, string pUser_Name, string pEmail_User, string pEmp_User, string pCidade, string pVeic_User, string pObs, object userState) {
            if ((this.spuInsertMacAddressOperationCompleted == null)) {
                this.spuInsertMacAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuInsertMacAddressOperationCompleted);
            }
            this.InvokeAsync("spuInsertMacAddress", new object[] {
                        pMac,
                        pCPU,
                        pComputador,
                        pUser_Name,
                        pEmail_User,
                        pEmp_User,
                        pCidade,
                        pVeic_User,
                        pObs}, this.spuInsertMacAddressOperationCompleted, userState);
        }
        
        private void OnspuInsertMacAddressOperationCompleted(object arg) {
            if ((this.spuInsertMacAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuInsertMacAddressCompleted(this, new spuInsertMacAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Teste", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Teste() {
            object[] results = this.Invoke("Teste", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTeste(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Teste", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndTeste(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TesteAsync() {
            this.TesteAsync(null);
        }
        
        /// <remarks/>
        public void TesteAsync(object userState) {
            if ((this.TesteOperationCompleted == null)) {
                this.TesteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTesteOperationCompleted);
            }
            this.InvokeAsync("Teste", new object[0], this.TesteOperationCompleted, userState);
        }
        
        private void OnTesteOperationCompleted(object arg) {
            if ((this.TesteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TesteCompleted(this, new TesteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnServerName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string fnServerName() {
            object[] results = this.Invoke("fnServerName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfnServerName(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("fnServerName", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndfnServerName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnServerNameAsync() {
            this.fnServerNameAsync(null);
        }
        
        /// <remarks/>
        public void fnServerNameAsync(object userState) {
            if ((this.fnServerNameOperationCompleted == null)) {
                this.fnServerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnServerNameOperationCompleted);
            }
            this.InvokeAsync("fnServerName", new object[0], this.fnServerNameOperationCompleted, userState);
        }
        
        private void OnfnServerNameOperationCompleted(object arg) {
            if ((this.fnServerNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnServerNameCompleted(this, new fnServerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnDataBaseName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string fnDataBaseName() {
            object[] results = this.Invoke("fnDataBaseName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfnDataBaseName(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("fnDataBaseName", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndfnDataBaseName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnDataBaseNameAsync() {
            this.fnDataBaseNameAsync(null);
        }
        
        /// <remarks/>
        public void fnDataBaseNameAsync(object userState) {
            if ((this.fnDataBaseNameOperationCompleted == null)) {
                this.fnDataBaseNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnDataBaseNameOperationCompleted);
            }
            this.InvokeAsync("fnDataBaseName", new object[0], this.fnDataBaseNameOperationCompleted, userState);
        }
        
        private void OnfnDataBaseNameOperationCompleted(object arg) {
            if ((this.fnDataBaseNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnDataBaseNameCompleted(this, new fnDataBaseNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnParametrosGerais", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string fnParametrosGerais(string pCod_Empresa_Faturamento, string pCod_Empresa_Venda, string pCod_Veiculo, int pCod_Parametro) {
            object[] results = this.Invoke("fnParametrosGerais", new object[] {
                        pCod_Empresa_Faturamento,
                        pCod_Empresa_Venda,
                        pCod_Veiculo,
                        pCod_Parametro});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfnParametrosGerais(string pCod_Empresa_Faturamento, string pCod_Empresa_Venda, string pCod_Veiculo, int pCod_Parametro, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("fnParametrosGerais", new object[] {
                        pCod_Empresa_Faturamento,
                        pCod_Empresa_Venda,
                        pCod_Veiculo,
                        pCod_Parametro}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndfnParametrosGerais(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void fnParametrosGeraisAsync(string pCod_Empresa_Faturamento, string pCod_Empresa_Venda, string pCod_Veiculo, int pCod_Parametro) {
            this.fnParametrosGeraisAsync(pCod_Empresa_Faturamento, pCod_Empresa_Venda, pCod_Veiculo, pCod_Parametro, null);
        }
        
        /// <remarks/>
        public void fnParametrosGeraisAsync(string pCod_Empresa_Faturamento, string pCod_Empresa_Venda, string pCod_Veiculo, int pCod_Parametro, object userState) {
            if ((this.fnParametrosGeraisOperationCompleted == null)) {
                this.fnParametrosGeraisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnParametrosGeraisOperationCompleted);
            }
            this.InvokeAsync("fnParametrosGerais", new object[] {
                        pCod_Empresa_Faturamento,
                        pCod_Empresa_Venda,
                        pCod_Veiculo,
                        pCod_Parametro}, this.fnParametrosGeraisOperationCompleted, userState);
        }
        
        private void OnfnParametrosGeraisOperationCompleted(object arg) {
            if ((this.fnParametrosGeraisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnParametrosGeraisCompleted(this, new fnParametrosGeraisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnSqlExecute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fnSqlExecute(string pSqlCommand) {
            object[] results = this.Invoke("fnSqlExecute", new object[] {
                        pSqlCommand});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfnSqlExecute(string pSqlCommand, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("fnSqlExecute", new object[] {
                        pSqlCommand}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndfnSqlExecute(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fnSqlExecuteAsync(string pSqlCommand) {
            this.fnSqlExecuteAsync(pSqlCommand, null);
        }
        
        /// <remarks/>
        public void fnSqlExecuteAsync(string pSqlCommand, object userState) {
            if ((this.fnSqlExecuteOperationCompleted == null)) {
                this.fnSqlExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSqlExecuteOperationCompleted);
            }
            this.InvokeAsync("fnSqlExecute", new object[] {
                        pSqlCommand}, this.fnSqlExecuteOperationCompleted, userState);
        }
        
        private void OnfnSqlExecuteOperationCompleted(object arg) {
            if ((this.fnSqlExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSqlExecuteCompleted(this, new fnSqlExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnFiltroCarregar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable fnFiltroCarregar(string pTable) {
            object[] results = this.Invoke("fnFiltroCarregar", new object[] {
                        pTable});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfnFiltroCarregar(string pTable, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("fnFiltroCarregar", new object[] {
                        pTable}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndfnFiltroCarregar(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void fnFiltroCarregarAsync(string pTable) {
            this.fnFiltroCarregarAsync(pTable, null);
        }
        
        /// <remarks/>
        public void fnFiltroCarregarAsync(string pTable, object userState) {
            if ((this.fnFiltroCarregarOperationCompleted == null)) {
                this.fnFiltroCarregarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnFiltroCarregarOperationCompleted);
            }
            this.InvokeAsync("fnFiltroCarregar", new object[] {
                        pTable}, this.fnFiltroCarregarOperationCompleted, userState);
        }
        
        private void OnfnFiltroCarregarOperationCompleted(object arg) {
            if ((this.fnFiltroCarregarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnFiltroCarregarCompleted(this, new fnFiltroCarregarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnSendEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool fnSendEmail(string pFrom, string pTo, string pCC, string pSubject, string pBody) {
            object[] results = this.Invoke("fnSendEmail", new object[] {
                        pFrom,
                        pTo,
                        pCC,
                        pSubject,
                        pBody});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfnSendEmail(string pFrom, string pTo, string pCC, string pSubject, string pBody, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("fnSendEmail", new object[] {
                        pFrom,
                        pTo,
                        pCC,
                        pSubject,
                        pBody}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndfnSendEmail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnSendEmailAsync(string pFrom, string pTo, string pCC, string pSubject, string pBody) {
            this.fnSendEmailAsync(pFrom, pTo, pCC, pSubject, pBody, null);
        }
        
        /// <remarks/>
        public void fnSendEmailAsync(string pFrom, string pTo, string pCC, string pSubject, string pBody, object userState) {
            if ((this.fnSendEmailOperationCompleted == null)) {
                this.fnSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSendEmailOperationCompleted);
            }
            this.InvokeAsync("fnSendEmail", new object[] {
                        pFrom,
                        pTo,
                        pCC,
                        pSubject,
                        pBody}, this.fnSendEmailOperationCompleted, userState);
        }
        
        private void OnfnSendEmailOperationCompleted(object arg) {
            if ((this.fnSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSendEmailCompleted(this, new fnSendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fnSqlComando", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool fnSqlComando(string pSqlCommand) {
            object[] results = this.Invoke("fnSqlComando", new object[] {
                        pSqlCommand});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfnSqlComando(string pSqlCommand, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("fnSqlComando", new object[] {
                        pSqlCommand}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndfnSqlComando(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void fnSqlComandoAsync(string pSqlCommand) {
            this.fnSqlComandoAsync(pSqlCommand, null);
        }
        
        /// <remarks/>
        public void fnSqlComandoAsync(string pSqlCommand, object userState) {
            if ((this.fnSqlComandoOperationCompleted == null)) {
                this.fnSqlComandoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfnSqlComandoOperationCompleted);
            }
            this.InvokeAsync("fnSqlComando", new object[] {
                        pSqlCommand}, this.fnSqlComandoOperationCompleted, userState);
        }
        
        private void OnfnSqlComandoOperationCompleted(object arg) {
            if ((this.fnSqlComandoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fnSqlComandoCompleted(this, new fnSqlComandoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthSoapHd : System.Web.Services.Protocols.SoapHeader {
        
        private string strUserNameField;
        
        private string strPasswordField;
        
        private string strKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string strUserName {
            get {
                return this.strUserNameField;
            }
            set {
                this.strUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string strPassword {
            get {
                return this.strPasswordField;
            }
            set {
                this.strPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string strKey {
            get {
                return this.strKeyField;
            }
            set {
                this.strKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuSelectMacAdressCompletedEventHandler(object sender, spuSelectMacAdressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuSelectMacAdressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuSelectMacAdressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuInsertEmailCompletedEventHandler(object sender, spuInsertEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuInsertEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuInsertEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuInsertMacAddressCompletedEventHandler(object sender, spuInsertMacAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuInsertMacAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuInsertMacAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void TesteCompletedEventHandler(object sender, TesteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TesteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TesteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void fnServerNameCompletedEventHandler(object sender, fnServerNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnServerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnServerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void fnDataBaseNameCompletedEventHandler(object sender, fnDataBaseNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnDataBaseNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnDataBaseNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void fnParametrosGeraisCompletedEventHandler(object sender, fnParametrosGeraisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnParametrosGeraisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnParametrosGeraisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void fnSqlExecuteCompletedEventHandler(object sender, fnSqlExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSqlExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSqlExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void fnFiltroCarregarCompletedEventHandler(object sender, fnFiltroCarregarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnFiltroCarregarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnFiltroCarregarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void fnSendEmailCompletedEventHandler(object sender, fnSendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void fnSqlComandoCompletedEventHandler(object sender, fnSqlComandoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fnSqlComandoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fnSqlComandoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}
