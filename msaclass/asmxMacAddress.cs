//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:2.0.50727.5485
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace MSAClass.asmxMacAddress {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="asmxMacAddressSoap", Namespace="http://tempuri.org/")]
    public partial class asmxMacAddress : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthSoapHd authSoapHdValueField;
        
        private System.Threading.SendOrPostCallback spuCarregarPendentesOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuCarregarTodosOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuUpdateMacAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuDeleteMacAddressOperationCompleted;
        
        /// <remarks/>
        public asmxMacAddress() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["asmxMacAddress"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://localhost/WebServiceMSA/asmxMacAddress.asmx";
            }
        }
        
        public AuthSoapHd AuthSoapHdValue {
            get {
                return this.authSoapHdValueField;
            }
            set {
                this.authSoapHdValueField = value;
            }
        }
        
        /// <remarks/>
        public event spuCarregarPendentesCompletedEventHandler spuCarregarPendentesCompleted;
        
        /// <remarks/>
        public event spuCarregarTodosCompletedEventHandler spuCarregarTodosCompleted;
        
        /// <remarks/>
        public event spuUpdateMacAddressCompletedEventHandler spuUpdateMacAddressCompleted;
        
        /// <remarks/>
        public event spuDeleteMacAddressCompletedEventHandler spuDeleteMacAddressCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuCarregarPendentes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dtsMacAddress spuCarregarPendentes(string pMac, int pFlag) {
            object[] results = this.Invoke("spuCarregarPendentes", new object[] {
                        pMac,
                        pFlag});
            return ((dtsMacAddress)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuCarregarPendentes(string pMac, int pFlag, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuCarregarPendentes", new object[] {
                        pMac,
                        pFlag}, callback, asyncState);
        }
        
        /// <remarks/>
        public dtsMacAddress EndspuCarregarPendentes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((dtsMacAddress)(results[0]));
        }
        
        /// <remarks/>
        public void spuCarregarPendentesAsync(string pMac, int pFlag) {
            this.spuCarregarPendentesAsync(pMac, pFlag, null);
        }
        
        /// <remarks/>
        public void spuCarregarPendentesAsync(string pMac, int pFlag, object userState) {
            if ((this.spuCarregarPendentesOperationCompleted == null)) {
                this.spuCarregarPendentesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuCarregarPendentesOperationCompleted);
            }
            this.InvokeAsync("spuCarregarPendentes", new object[] {
                        pMac,
                        pFlag}, this.spuCarregarPendentesOperationCompleted, userState);
        }
        
        private void OnspuCarregarPendentesOperationCompleted(object arg) {
            if ((this.spuCarregarPendentesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuCarregarPendentesCompleted(this, new spuCarregarPendentesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuCarregarTodos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dtsMacAddress spuCarregarTodos() {
            object[] results = this.Invoke("spuCarregarTodos", new object[0]);
            return ((dtsMacAddress)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuCarregarTodos(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuCarregarTodos", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public dtsMacAddress EndspuCarregarTodos(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((dtsMacAddress)(results[0]));
        }
        
        /// <remarks/>
        public void spuCarregarTodosAsync() {
            this.spuCarregarTodosAsync(null);
        }
        
        /// <remarks/>
        public void spuCarregarTodosAsync(object userState) {
            if ((this.spuCarregarTodosOperationCompleted == null)) {
                this.spuCarregarTodosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuCarregarTodosOperationCompleted);
            }
            this.InvokeAsync("spuCarregarTodos", new object[0], this.spuCarregarTodosOperationCompleted, userState);
        }
        
        private void OnspuCarregarTodosOperationCompleted(object arg) {
            if ((this.spuCarregarTodosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuCarregarTodosCompleted(this, new spuCarregarTodosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuUpdateMacAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int spuUpdateMacAddress(int Id_Interno, string User_Cadastro, int Flag_Pendente) {
            object[] results = this.Invoke("spuUpdateMacAddress", new object[] {
                        Id_Interno,
                        User_Cadastro,
                        Flag_Pendente});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuUpdateMacAddress(int Id_Interno, string User_Cadastro, int Flag_Pendente, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuUpdateMacAddress", new object[] {
                        Id_Interno,
                        User_Cadastro,
                        Flag_Pendente}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndspuUpdateMacAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void spuUpdateMacAddressAsync(int Id_Interno, string User_Cadastro, int Flag_Pendente) {
            this.spuUpdateMacAddressAsync(Id_Interno, User_Cadastro, Flag_Pendente, null);
        }
        
        /// <remarks/>
        public void spuUpdateMacAddressAsync(int Id_Interno, string User_Cadastro, int Flag_Pendente, object userState) {
            if ((this.spuUpdateMacAddressOperationCompleted == null)) {
                this.spuUpdateMacAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuUpdateMacAddressOperationCompleted);
            }
            this.InvokeAsync("spuUpdateMacAddress", new object[] {
                        Id_Interno,
                        User_Cadastro,
                        Flag_Pendente}, this.spuUpdateMacAddressOperationCompleted, userState);
        }
        
        private void OnspuUpdateMacAddressOperationCompleted(object arg) {
            if ((this.spuUpdateMacAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuUpdateMacAddressCompleted(this, new spuUpdateMacAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuDeleteMacAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int spuDeleteMacAddress(int Id_Interno) {
            object[] results = this.Invoke("spuDeleteMacAddress", new object[] {
                        Id_Interno});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuDeleteMacAddress(int Id_Interno, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuDeleteMacAddress", new object[] {
                        Id_Interno}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndspuDeleteMacAddress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void spuDeleteMacAddressAsync(int Id_Interno) {
            this.spuDeleteMacAddressAsync(Id_Interno, null);
        }
        
        /// <remarks/>
        public void spuDeleteMacAddressAsync(int Id_Interno, object userState) {
            if ((this.spuDeleteMacAddressOperationCompleted == null)) {
                this.spuDeleteMacAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuDeleteMacAddressOperationCompleted);
            }
            this.InvokeAsync("spuDeleteMacAddress", new object[] {
                        Id_Interno}, this.spuDeleteMacAddressOperationCompleted, userState);
        }
        
        private void OnspuDeleteMacAddressOperationCompleted(object arg) {
            if ((this.spuDeleteMacAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuDeleteMacAddressCompleted(this, new spuDeleteMacAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthSoapHd : System.Web.Services.Protocols.SoapHeader {
        
        private string strUserNameField;
        
        private string strPasswordField;
        
        private string strKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string strUserName {
            get {
                return this.strUserNameField;
            }
            set {
                this.strUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string strPassword {
            get {
                return this.strPasswordField;
            }
            set {
                this.strPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string strKey {
            get {
                return this.strKeyField;
            }
            set {
                this.strKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // A definição deste tipo foi gerada pela extensão do importador do esquema System.Data.Design.TypedDataSetSchemaImporterExtension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dtsMacAddress")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dtsMacAddress : global::System.Data.DataSet {
        
        private dtbMAC_AddressDataTable tabledtbMAC_Address;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtsMacAddress() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dtsMacAddress(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtbMAC_Address"] != null)) {
                    base.Tables.Add(new dtbMAC_AddressDataTable(ds.Tables["dtbMAC_Address"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbMAC_AddressDataTable dtbMAC_Address {
            get {
                return this.tabledtbMAC_Address;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dtsMacAddress cln = ((dtsMacAddress)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtbMAC_Address"] != null)) {
                    base.Tables.Add(new dtbMAC_AddressDataTable(ds.Tables["dtbMAC_Address"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtbMAC_Address = ((dtbMAC_AddressDataTable)(base.Tables["dtbMAC_Address"]));
            if ((initTable == true)) {
                if ((this.tabledtbMAC_Address != null)) {
                    this.tabledtbMAC_Address.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dtsMacAddress";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dtsMacAddress.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtbMAC_Address = new dtbMAC_AddressDataTable();
            base.Tables.Add(this.tabledtbMAC_Address);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbMAC_Address() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dtsMacAddress ds = new dtsMacAddress();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtbMAC_AddressRowChangeEventHandler(object sender, dtbMAC_AddressRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbMAC_AddressDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnId_Interno;
            
            private global::System.Data.DataColumn columnEndereco_MAC;
            
            private global::System.Data.DataColumn columnIdentificador_CPU;
            
            private global::System.Data.DataColumn columnNome_Computador;
            
            private global::System.Data.DataColumn columnNome_Usuario;
            
            private global::System.Data.DataColumn columnEmail_Usuario;
            
            private global::System.Data.DataColumn columnEmpresa_Usuario;
            
            private global::System.Data.DataColumn columnCidade_Usuario;
            
            private global::System.Data.DataColumn columnVeiculo_Usuario;
            
            private global::System.Data.DataColumn columnObservacao;
            
            private global::System.Data.DataColumn columnData_Cadastro;
            
            private global::System.Data.DataColumn columnUser_Cadastro;
            
            private global::System.Data.DataColumn columnData_Alteracao;
            
            private global::System.Data.DataColumn columnUser_Alteracao;
            
            private global::System.Data.DataColumn columnFlag_Pendente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbMAC_AddressDataTable() {
                this.TableName = "dtbMAC_Address";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbMAC_AddressDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbMAC_AddressDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_InternoColumn {
                get {
                    return this.columnId_Interno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Endereco_MACColumn {
                get {
                    return this.columnEndereco_MAC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Identificador_CPUColumn {
                get {
                    return this.columnIdentificador_CPU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nome_ComputadorColumn {
                get {
                    return this.columnNome_Computador;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nome_UsuarioColumn {
                get {
                    return this.columnNome_Usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Email_UsuarioColumn {
                get {
                    return this.columnEmail_Usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Empresa_UsuarioColumn {
                get {
                    return this.columnEmpresa_Usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cidade_UsuarioColumn {
                get {
                    return this.columnCidade_Usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Veiculo_UsuarioColumn {
                get {
                    return this.columnVeiculo_Usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObservacaoColumn {
                get {
                    return this.columnObservacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Data_CadastroColumn {
                get {
                    return this.columnData_Cadastro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_CadastroColumn {
                get {
                    return this.columnUser_Cadastro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Data_AlteracaoColumn {
                get {
                    return this.columnData_Alteracao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_AlteracaoColumn {
                get {
                    return this.columnUser_Alteracao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Flag_PendenteColumn {
                get {
                    return this.columnFlag_Pendente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbMAC_AddressRow this[int index] {
                get {
                    return ((dtbMAC_AddressRow)(this.Rows[index]));
                }
            }
            
            public event dtbMAC_AddressRowChangeEventHandler dtbMAC_AddressRowChanging;
            
            public event dtbMAC_AddressRowChangeEventHandler dtbMAC_AddressRowChanged;
            
            public event dtbMAC_AddressRowChangeEventHandler dtbMAC_AddressRowDeleting;
            
            public event dtbMAC_AddressRowChangeEventHandler dtbMAC_AddressRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbMAC_AddressRow(dtbMAC_AddressRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbMAC_AddressRow AdddtbMAC_AddressRow(string Endereco_MAC, string Identificador_CPU, string Nome_Computador, string Nome_Usuario, string Email_Usuario, string Empresa_Usuario, string Cidade_Usuario, string Veiculo_Usuario, string Observacao, System.DateTime Data_Cadastro, string User_Cadastro, System.DateTime Data_Alteracao, string User_Alteracao, short Flag_Pendente) {
                dtbMAC_AddressRow rowdtbMAC_AddressRow = ((dtbMAC_AddressRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Endereco_MAC,
                        Identificador_CPU,
                        Nome_Computador,
                        Nome_Usuario,
                        Email_Usuario,
                        Empresa_Usuario,
                        Cidade_Usuario,
                        Veiculo_Usuario,
                        Observacao,
                        Data_Cadastro,
                        User_Cadastro,
                        Data_Alteracao,
                        User_Alteracao,
                        Flag_Pendente};
                rowdtbMAC_AddressRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbMAC_AddressRow);
                return rowdtbMAC_AddressRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbMAC_AddressRow FindById_Interno(int Id_Interno) {
                return ((dtbMAC_AddressRow)(this.Rows.Find(new object[] {
                            Id_Interno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbMAC_AddressDataTable cln = ((dtbMAC_AddressDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbMAC_AddressDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_Interno = base.Columns["Id_Interno"];
                this.columnEndereco_MAC = base.Columns["Endereco_MAC"];
                this.columnIdentificador_CPU = base.Columns["Identificador_CPU"];
                this.columnNome_Computador = base.Columns["Nome_Computador"];
                this.columnNome_Usuario = base.Columns["Nome_Usuario"];
                this.columnEmail_Usuario = base.Columns["Email_Usuario"];
                this.columnEmpresa_Usuario = base.Columns["Empresa_Usuario"];
                this.columnCidade_Usuario = base.Columns["Cidade_Usuario"];
                this.columnVeiculo_Usuario = base.Columns["Veiculo_Usuario"];
                this.columnObservacao = base.Columns["Observacao"];
                this.columnData_Cadastro = base.Columns["Data_Cadastro"];
                this.columnUser_Cadastro = base.Columns["User_Cadastro"];
                this.columnData_Alteracao = base.Columns["Data_Alteracao"];
                this.columnUser_Alteracao = base.Columns["User_Alteracao"];
                this.columnFlag_Pendente = base.Columns["Flag_Pendente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_Interno = new global::System.Data.DataColumn("Id_Interno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_Interno);
                this.columnEndereco_MAC = new global::System.Data.DataColumn("Endereco_MAC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndereco_MAC);
                this.columnIdentificador_CPU = new global::System.Data.DataColumn("Identificador_CPU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdentificador_CPU);
                this.columnNome_Computador = new global::System.Data.DataColumn("Nome_Computador", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNome_Computador);
                this.columnNome_Usuario = new global::System.Data.DataColumn("Nome_Usuario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNome_Usuario);
                this.columnEmail_Usuario = new global::System.Data.DataColumn("Email_Usuario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail_Usuario);
                this.columnEmpresa_Usuario = new global::System.Data.DataColumn("Empresa_Usuario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpresa_Usuario);
                this.columnCidade_Usuario = new global::System.Data.DataColumn("Cidade_Usuario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCidade_Usuario);
                this.columnVeiculo_Usuario = new global::System.Data.DataColumn("Veiculo_Usuario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVeiculo_Usuario);
                this.columnObservacao = new global::System.Data.DataColumn("Observacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservacao);
                this.columnData_Cadastro = new global::System.Data.DataColumn("Data_Cadastro", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_Cadastro);
                this.columnUser_Cadastro = new global::System.Data.DataColumn("User_Cadastro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Cadastro);
                this.columnData_Alteracao = new global::System.Data.DataColumn("Data_Alteracao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_Alteracao);
                this.columnUser_Alteracao = new global::System.Data.DataColumn("User_Alteracao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Alteracao);
                this.columnFlag_Pendente = new global::System.Data.DataColumn("Flag_Pendente", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag_Pendente);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_Interno}, true));
                this.columnId_Interno.AutoIncrement = true;
                this.columnId_Interno.AllowDBNull = false;
                this.columnId_Interno.ReadOnly = true;
                this.columnId_Interno.Unique = true;
                this.columnEndereco_MAC.AllowDBNull = false;
                this.columnEndereco_MAC.MaxLength = 20;
                this.columnIdentificador_CPU.MaxLength = 20;
                this.columnNome_Computador.MaxLength = 20;
                this.columnNome_Usuario.MaxLength = 50;
                this.columnEmail_Usuario.MaxLength = 100;
                this.columnEmpresa_Usuario.MaxLength = 50;
                this.columnCidade_Usuario.MaxLength = 30;
                this.columnVeiculo_Usuario.MaxLength = 50;
                this.columnObservacao.MaxLength = 250;
                this.columnUser_Cadastro.MaxLength = 20;
                this.columnUser_Alteracao.MaxLength = 20;
                this.columnFlag_Pendente.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbMAC_AddressRow NewdtbMAC_AddressRow() {
                return ((dtbMAC_AddressRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbMAC_AddressRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbMAC_AddressRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbMAC_AddressRowChanged != null)) {
                    this.dtbMAC_AddressRowChanged(this, new dtbMAC_AddressRowChangeEvent(((dtbMAC_AddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbMAC_AddressRowChanging != null)) {
                    this.dtbMAC_AddressRowChanging(this, new dtbMAC_AddressRowChangeEvent(((dtbMAC_AddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbMAC_AddressRowDeleted != null)) {
                    this.dtbMAC_AddressRowDeleted(this, new dtbMAC_AddressRowChangeEvent(((dtbMAC_AddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbMAC_AddressRowDeleting != null)) {
                    this.dtbMAC_AddressRowDeleting(this, new dtbMAC_AddressRowChangeEvent(((dtbMAC_AddressRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbMAC_AddressRow(dtbMAC_AddressRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsMacAddress ds = new dtsMacAddress();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbMAC_AddressDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbMAC_AddressRow : global::System.Data.DataRow {
            
            private dtbMAC_AddressDataTable tabledtbMAC_Address;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbMAC_AddressRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbMAC_Address = ((dtbMAC_AddressDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_Interno {
                get {
                    return ((int)(this[this.tabledtbMAC_Address.Id_InternoColumn]));
                }
                set {
                    this[this.tabledtbMAC_Address.Id_InternoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Endereco_MAC {
                get {
                    return ((string)(this[this.tabledtbMAC_Address.Endereco_MACColumn]));
                }
                set {
                    this[this.tabledtbMAC_Address.Endereco_MACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Identificador_CPU {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.Identificador_CPUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Identificador_CPU\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.Identificador_CPUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nome_Computador {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.Nome_ComputadorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Nome_Computador\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.Nome_ComputadorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nome_Usuario {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.Nome_UsuarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Nome_Usuario\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.Nome_UsuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email_Usuario {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.Email_UsuarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Email_Usuario\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.Email_UsuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empresa_Usuario {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.Empresa_UsuarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Empresa_Usuario\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.Empresa_UsuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cidade_Usuario {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.Cidade_UsuarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Cidade_Usuario\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.Cidade_UsuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Veiculo_Usuario {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.Veiculo_UsuarioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Veiculo_Usuario\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.Veiculo_UsuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Observacao {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.ObservacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Observacao\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.ObservacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Data_Cadastro {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtbMAC_Address.Data_CadastroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Data_Cadastro\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.Data_CadastroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User_Cadastro {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.User_CadastroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'User_Cadastro\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.User_CadastroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Data_Alteracao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtbMAC_Address.Data_AlteracaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Data_Alteracao\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.Data_AlteracaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string User_Alteracao {
                get {
                    try {
                        return ((string)(this[this.tabledtbMAC_Address.User_AlteracaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'User_Alteracao\' na tabela \'dtbMAC_Address\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbMAC_Address.User_AlteracaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Flag_Pendente {
                get {
                    return ((short)(this[this.tabledtbMAC_Address.Flag_PendenteColumn]));
                }
                set {
                    this[this.tabledtbMAC_Address.Flag_PendenteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdentificador_CPUNull() {
                return this.IsNull(this.tabledtbMAC_Address.Identificador_CPUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdentificador_CPUNull() {
                this[this.tabledtbMAC_Address.Identificador_CPUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNome_ComputadorNull() {
                return this.IsNull(this.tabledtbMAC_Address.Nome_ComputadorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNome_ComputadorNull() {
                this[this.tabledtbMAC_Address.Nome_ComputadorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNome_UsuarioNull() {
                return this.IsNull(this.tabledtbMAC_Address.Nome_UsuarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNome_UsuarioNull() {
                this[this.tabledtbMAC_Address.Nome_UsuarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmail_UsuarioNull() {
                return this.IsNull(this.tabledtbMAC_Address.Email_UsuarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmail_UsuarioNull() {
                this[this.tabledtbMAC_Address.Email_UsuarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpresa_UsuarioNull() {
                return this.IsNull(this.tabledtbMAC_Address.Empresa_UsuarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpresa_UsuarioNull() {
                this[this.tabledtbMAC_Address.Empresa_UsuarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCidade_UsuarioNull() {
                return this.IsNull(this.tabledtbMAC_Address.Cidade_UsuarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCidade_UsuarioNull() {
                this[this.tabledtbMAC_Address.Cidade_UsuarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVeiculo_UsuarioNull() {
                return this.IsNull(this.tabledtbMAC_Address.Veiculo_UsuarioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVeiculo_UsuarioNull() {
                this[this.tabledtbMAC_Address.Veiculo_UsuarioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObservacaoNull() {
                return this.IsNull(this.tabledtbMAC_Address.ObservacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObservacaoNull() {
                this[this.tabledtbMAC_Address.ObservacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsData_CadastroNull() {
                return this.IsNull(this.tabledtbMAC_Address.Data_CadastroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetData_CadastroNull() {
                this[this.tabledtbMAC_Address.Data_CadastroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_CadastroNull() {
                return this.IsNull(this.tabledtbMAC_Address.User_CadastroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_CadastroNull() {
                this[this.tabledtbMAC_Address.User_CadastroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsData_AlteracaoNull() {
                return this.IsNull(this.tabledtbMAC_Address.Data_AlteracaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetData_AlteracaoNull() {
                this[this.tabledtbMAC_Address.Data_AlteracaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_AlteracaoNull() {
                return this.IsNull(this.tabledtbMAC_Address.User_AlteracaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_AlteracaoNull() {
                this[this.tabledtbMAC_Address.User_AlteracaoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbMAC_AddressRowChangeEvent : global::System.EventArgs {
            
            private dtbMAC_AddressRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbMAC_AddressRowChangeEvent(dtbMAC_AddressRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbMAC_AddressRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuCarregarPendentesCompletedEventHandler(object sender, spuCarregarPendentesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuCarregarPendentesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuCarregarPendentesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dtsMacAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dtsMacAddress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuCarregarTodosCompletedEventHandler(object sender, spuCarregarTodosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuCarregarTodosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuCarregarTodosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dtsMacAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dtsMacAddress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuUpdateMacAddressCompletedEventHandler(object sender, spuUpdateMacAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuUpdateMacAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuUpdateMacAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuDeleteMacAddressCompletedEventHandler(object sender, spuDeleteMacAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuDeleteMacAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuDeleteMacAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}
