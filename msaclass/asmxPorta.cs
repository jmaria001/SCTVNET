//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:2.0.50727.5485
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace MSAClass.AsmxPorta {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="asmxPortaSoap", Namespace="http://tempuri.org/")]
    public partial class asmxPorta : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthSoapHd authSoapHdValueField;
        
        private System.Threading.SendOrPostCallback CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuCarregarOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuAtualizarOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuLimparOperationCompleted;
        
        private System.Threading.SendOrPostCallback spuConsistirOperationCompleted;
        
        /// <remarks/>
        public asmxPorta() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["url_AsmxPorta"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://localhost/WebServiceMSA/AsmxPorta.asmx";
            }
        }
        
        public AuthSoapHd AuthSoapHdValue {
            get {
                return this.authSoapHdValueField;
            }
            set {
                this.authSoapHdValueField = value;
            }
        }
        
        /// <remarks/>
        public event CreateCompletedEventHandler CreateCompleted;
        
        /// <remarks/>
        public event spuCarregarCompletedEventHandler spuCarregarCompleted;
        
        /// <remarks/>
        public event spuAtualizarCompletedEventHandler spuAtualizarCompleted;
        
        /// <remarks/>
        public event spuLimparCompletedEventHandler spuLimparCompleted;
        
        /// <remarks/>
        public event spuConsistirCompletedEventHandler spuConsistirCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Create", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dtsPorta Create() {
            object[] results = this.Invoke("Create", new object[0]);
            return ((dtsPorta)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreate(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Create", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public dtsPorta EndCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((dtsPorta)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAsync() {
            this.CreateAsync(null);
        }
        
        /// <remarks/>
        public void CreateAsync(object userState) {
            if ((this.CreateOperationCompleted == null)) {
                this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
            }
            this.InvokeAsync("Create", new object[0], this.CreateOperationCompleted, userState);
        }
        
        private void OnCreateOperationCompleted(object arg) {
            if ((this.CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuCarregar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dtsPorta spuCarregar(string strCod_Veiculo, System.DateTime dtData_Exibicao, string strCod_Programa) {
            object[] results = this.Invoke("spuCarregar", new object[] {
                        strCod_Veiculo,
                        dtData_Exibicao,
                        strCod_Programa});
            return ((dtsPorta)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuCarregar(string strCod_Veiculo, System.DateTime dtData_Exibicao, string strCod_Programa, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuCarregar", new object[] {
                        strCod_Veiculo,
                        dtData_Exibicao,
                        strCod_Programa}, callback, asyncState);
        }
        
        /// <remarks/>
        public dtsPorta EndspuCarregar(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((dtsPorta)(results[0]));
        }
        
        /// <remarks/>
        public void spuCarregarAsync(string strCod_Veiculo, System.DateTime dtData_Exibicao, string strCod_Programa) {
            this.spuCarregarAsync(strCod_Veiculo, dtData_Exibicao, strCod_Programa, null);
        }
        
        /// <remarks/>
        public void spuCarregarAsync(string strCod_Veiculo, System.DateTime dtData_Exibicao, string strCod_Programa, object userState) {
            if ((this.spuCarregarOperationCompleted == null)) {
                this.spuCarregarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuCarregarOperationCompleted);
            }
            this.InvokeAsync("spuCarregar", new object[] {
                        strCod_Veiculo,
                        dtData_Exibicao,
                        strCod_Programa}, this.spuCarregarOperationCompleted, userState);
        }
        
        private void OnspuCarregarOperationCompleted(object arg) {
            if ((this.spuCarregarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuCarregarCompleted(this, new spuCarregarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuAtualizar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void spuAtualizar(ref dtsPorta dtsPorta) {
            object[] results = this.Invoke("spuAtualizar", new object[] {
                        dtsPorta});
            dtsPorta = ((dtsPorta)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuAtualizar(dtsPorta dtsPorta, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuAtualizar", new object[] {
                        dtsPorta}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndspuAtualizar(System.IAsyncResult asyncResult, out dtsPorta dtsPorta) {
            object[] results = this.EndInvoke(asyncResult);
            dtsPorta = ((dtsPorta)(results[0]));
        }
        
        /// <remarks/>
        public void spuAtualizarAsync(dtsPorta dtsPorta) {
            this.spuAtualizarAsync(dtsPorta, null);
        }
        
        /// <remarks/>
        public void spuAtualizarAsync(dtsPorta dtsPorta, object userState) {
            if ((this.spuAtualizarOperationCompleted == null)) {
                this.spuAtualizarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuAtualizarOperationCompleted);
            }
            this.InvokeAsync("spuAtualizar", new object[] {
                        dtsPorta}, this.spuAtualizarOperationCompleted, userState);
        }
        
        private void OnspuAtualizarOperationCompleted(object arg) {
            if ((this.spuAtualizarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuAtualizarCompleted(this, new spuAtualizarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuLimpar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void spuLimpar(int intFuncao, string strUsuario) {
            this.Invoke("spuLimpar", new object[] {
                        intFuncao,
                        strUsuario});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuLimpar(int intFuncao, string strUsuario, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuLimpar", new object[] {
                        intFuncao,
                        strUsuario}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndspuLimpar(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void spuLimparAsync(int intFuncao, string strUsuario) {
            this.spuLimparAsync(intFuncao, strUsuario, null);
        }
        
        /// <remarks/>
        public void spuLimparAsync(int intFuncao, string strUsuario, object userState) {
            if ((this.spuLimparOperationCompleted == null)) {
                this.spuLimparOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuLimparOperationCompleted);
            }
            this.InvokeAsync("spuLimpar", new object[] {
                        intFuncao,
                        strUsuario}, this.spuLimparOperationCompleted, userState);
        }
        
        private void OnspuLimparOperationCompleted(object arg) {
            if ((this.spuLimparCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuLimparCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuConsistir", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int spuConsistir(string strCod_Veiculo, System.DateTime dtData_Exibicao, string strCod_Programa) {
            object[] results = this.Invoke("spuConsistir", new object[] {
                        strCod_Veiculo,
                        dtData_Exibicao,
                        strCod_Programa});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuConsistir(string strCod_Veiculo, System.DateTime dtData_Exibicao, string strCod_Programa, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuConsistir", new object[] {
                        strCod_Veiculo,
                        dtData_Exibicao,
                        strCod_Programa}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndspuConsistir(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void spuConsistirAsync(string strCod_Veiculo, System.DateTime dtData_Exibicao, string strCod_Programa) {
            this.spuConsistirAsync(strCod_Veiculo, dtData_Exibicao, strCod_Programa, null);
        }
        
        /// <remarks/>
        public void spuConsistirAsync(string strCod_Veiculo, System.DateTime dtData_Exibicao, string strCod_Programa, object userState) {
            if ((this.spuConsistirOperationCompleted == null)) {
                this.spuConsistirOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuConsistirOperationCompleted);
            }
            this.InvokeAsync("spuConsistir", new object[] {
                        strCod_Veiculo,
                        dtData_Exibicao,
                        strCod_Programa}, this.spuConsistirOperationCompleted, userState);
        }
        
        private void OnspuConsistirOperationCompleted(object arg) {
            if ((this.spuConsistirCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuConsistirCompleted(this, new spuConsistirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthSoapHd : System.Web.Services.Protocols.SoapHeader {
        
        private string strUserNameField;
        
        private string strPasswordField;
        
        private string strKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string strUserName {
            get {
                return this.strUserNameField;
            }
            set {
                this.strUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string strPassword {
            get {
                return this.strPasswordField;
            }
            set {
                this.strPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string strKey {
            get {
                return this.strKeyField;
            }
            set {
                this.strKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // A definição deste tipo foi gerada pela extensão do importador do esquema System.Data.Design.TypedDataSetSchemaImporterExtension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dtsPorta")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dtsPorta : global::System.Data.DataSet {
        
        private dtbPortaDataTable tabledtbPorta;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtsPorta() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dtsPorta(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtbPorta"] != null)) {
                    base.Tables.Add(new dtbPortaDataTable(ds.Tables["dtbPorta"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbPortaDataTable dtbPorta {
            get {
                return this.tabledtbPorta;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dtsPorta cln = ((dtsPorta)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtbPorta"] != null)) {
                    base.Tables.Add(new dtbPortaDataTable(ds.Tables["dtbPorta"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtbPorta = ((dtbPortaDataTable)(base.Tables["dtbPorta"]));
            if ((initTable == true)) {
                if ((this.tabledtbPorta != null)) {
                    this.tabledtbPorta.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dtsPorta";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dtsPorta.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtbPorta = new dtbPortaDataTable();
            base.Tables.Add(this.tabledtbPorta);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbPorta() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dtsPorta ds = new dtsPorta();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtbPortaRowChangeEventHandler(object sender, dtbPortaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbPortaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFuncao;
            
            private global::System.Data.DataColumn columnCod_Veiculo;
            
            private global::System.Data.DataColumn columnData;
            
            private global::System.Data.DataColumn columnCod_Programa;
            
            private global::System.Data.DataColumn columnUsuario;
            
            private global::System.Data.DataColumn columnTitulo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbPortaDataTable() {
                this.TableName = "dtbPorta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbPortaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbPortaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FuncaoColumn {
                get {
                    return this.columnFuncao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_VeiculoColumn {
                get {
                    return this.columnCod_Veiculo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_ProgramaColumn {
                get {
                    return this.columnCod_Programa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsuarioColumn {
                get {
                    return this.columnUsuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbPortaRow this[int index] {
                get {
                    return ((dtbPortaRow)(this.Rows[index]));
                }
            }
            
            public event dtbPortaRowChangeEventHandler dtbPortaRowChanging;
            
            public event dtbPortaRowChangeEventHandler dtbPortaRowChanged;
            
            public event dtbPortaRowChangeEventHandler dtbPortaRowDeleting;
            
            public event dtbPortaRowChangeEventHandler dtbPortaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbPortaRow(dtbPortaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbPortaRow AdddtbPortaRow(short Funcao, string Cod_Veiculo, System.DateTime Data, string Cod_Programa, string Usuario, string Titulo) {
                dtbPortaRow rowdtbPortaRow = ((dtbPortaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Funcao,
                        Cod_Veiculo,
                        Data,
                        Cod_Programa,
                        Usuario,
                        Titulo};
                rowdtbPortaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbPortaRow);
                return rowdtbPortaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbPortaDataTable cln = ((dtbPortaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbPortaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFuncao = base.Columns["Funcao"];
                this.columnCod_Veiculo = base.Columns["Cod_Veiculo"];
                this.columnData = base.Columns["Data"];
                this.columnCod_Programa = base.Columns["Cod_Programa"];
                this.columnUsuario = base.Columns["Usuario"];
                this.columnTitulo = base.Columns["Titulo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFuncao = new global::System.Data.DataColumn("Funcao", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFuncao);
                this.columnCod_Veiculo = new global::System.Data.DataColumn("Cod_Veiculo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Veiculo);
                this.columnData = new global::System.Data.DataColumn("Data", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnCod_Programa = new global::System.Data.DataColumn("Cod_Programa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Programa);
                this.columnUsuario = new global::System.Data.DataColumn("Usuario", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario);
                this.columnTitulo = new global::System.Data.DataColumn("Titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitulo);
                this.columnFuncao.AllowDBNull = false;
                this.columnCod_Veiculo.MaxLength = 3;
                this.columnCod_Programa.MaxLength = 4;
                this.columnUsuario.AllowDBNull = false;
                this.columnUsuario.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbPortaRow NewdtbPortaRow() {
                return ((dtbPortaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbPortaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbPortaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbPortaRowChanged != null)) {
                    this.dtbPortaRowChanged(this, new dtbPortaRowChangeEvent(((dtbPortaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbPortaRowChanging != null)) {
                    this.dtbPortaRowChanging(this, new dtbPortaRowChangeEvent(((dtbPortaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbPortaRowDeleted != null)) {
                    this.dtbPortaRowDeleted(this, new dtbPortaRowChangeEvent(((dtbPortaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbPortaRowDeleting != null)) {
                    this.dtbPortaRowDeleting(this, new dtbPortaRowChangeEvent(((dtbPortaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbPortaRow(dtbPortaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsPorta ds = new dtsPorta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbPortaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbPortaRow : global::System.Data.DataRow {
            
            private dtbPortaDataTable tabledtbPorta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbPortaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbPorta = ((dtbPortaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Funcao {
                get {
                    return ((short)(this[this.tabledtbPorta.FuncaoColumn]));
                }
                set {
                    this[this.tabledtbPorta.FuncaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Veiculo {
                get {
                    try {
                        return ((string)(this[this.tabledtbPorta.Cod_VeiculoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Cod_Veiculo\' na tabela \'dtbPorta\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbPorta.Cod_VeiculoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Data {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtbPorta.DataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Data\' na tabela \'dtbPorta\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbPorta.DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Programa {
                get {
                    try {
                        return ((string)(this[this.tabledtbPorta.Cod_ProgramaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Cod_Programa\' na tabela \'dtbPorta\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbPorta.Cod_ProgramaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Usuario {
                get {
                    return ((string)(this[this.tabledtbPorta.UsuarioColumn]));
                }
                set {
                    this[this.tabledtbPorta.UsuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.tabledtbPorta.TituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Titulo\' na tabela \'dtbPorta\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbPorta.TituloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_VeiculoNull() {
                return this.IsNull(this.tabledtbPorta.Cod_VeiculoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_VeiculoNull() {
                this[this.tabledtbPorta.Cod_VeiculoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataNull() {
                return this.IsNull(this.tabledtbPorta.DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataNull() {
                this[this.tabledtbPorta.DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_ProgramaNull() {
                return this.IsNull(this.tabledtbPorta.Cod_ProgramaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_ProgramaNull() {
                this[this.tabledtbPorta.Cod_ProgramaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTituloNull() {
                return this.IsNull(this.tabledtbPorta.TituloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTituloNull() {
                this[this.tabledtbPorta.TituloColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbPortaRowChangeEvent : global::System.EventArgs {
            
            private dtbPortaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbPortaRowChangeEvent(dtbPortaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbPortaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dtsPorta Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dtsPorta)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuCarregarCompletedEventHandler(object sender, spuCarregarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuCarregarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuCarregarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dtsPorta Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dtsPorta)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuAtualizarCompletedEventHandler(object sender, spuAtualizarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuAtualizarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuAtualizarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dtsPorta dtsPorta {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dtsPorta)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuLimparCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuConsistirCompletedEventHandler(object sender, spuConsistirCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuConsistirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuConsistirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}
