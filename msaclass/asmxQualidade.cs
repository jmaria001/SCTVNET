//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:2.0.50727.5485
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace MSAClass.AsmxQualidade {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="asmxQualidadeSoap", Namespace="http://tempuri.org/")]
    public partial class asmxQualidade : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthSoapHd authSoapHdValueField;
        
        private System.Threading.SendOrPostCallback spuCarregarOperationCompleted;
        
        /// <remarks/>
        public asmxQualidade() {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["url_AsmxQualidade"];
            if ((urlSetting != null)) {
                this.Url = urlSetting;
            }
            else {
                this.Url = "http://localhost/WebServiceMSA/AsmxQualidade.asmx";
            }
        }
        
        public AuthSoapHd AuthSoapHdValue {
            get {
                return this.authSoapHdValueField;
            }
            set {
                this.authSoapHdValueField = value;
            }
        }
        
        /// <remarks/>
        public event spuCarregarCompletedEventHandler spuCarregarCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthSoapHdValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/spuCarregar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public dtsQualidade spuCarregar(string strCodQualidade) {
            object[] results = this.Invoke("spuCarregar", new object[] {
                        strCodQualidade});
            return ((dtsQualidade)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginspuCarregar(string strCodQualidade, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("spuCarregar", new object[] {
                        strCodQualidade}, callback, asyncState);
        }
        
        /// <remarks/>
        public dtsQualidade EndspuCarregar(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((dtsQualidade)(results[0]));
        }
        
        /// <remarks/>
        public void spuCarregarAsync(string strCodQualidade) {
            this.spuCarregarAsync(strCodQualidade, null);
        }
        
        /// <remarks/>
        public void spuCarregarAsync(string strCodQualidade, object userState) {
            if ((this.spuCarregarOperationCompleted == null)) {
                this.spuCarregarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnspuCarregarOperationCompleted);
            }
            this.InvokeAsync("spuCarregar", new object[] {
                        strCodQualidade}, this.spuCarregarOperationCompleted, userState);
        }
        
        private void OnspuCarregarOperationCompleted(object arg) {
            if ((this.spuCarregarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.spuCarregarCompleted(this, new spuCarregarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthSoapHd : System.Web.Services.Protocols.SoapHeader {
        
        private string strUserNameField;
        
        private string strPasswordField;
        
        private string strKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string strUserName {
            get {
                return this.strUserNameField;
            }
            set {
                this.strUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string strPassword {
            get {
                return this.strPasswordField;
            }
            set {
                this.strPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string strKey {
            get {
                return this.strKeyField;
            }
            set {
                this.strKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // A definição deste tipo foi gerada pela extensão do importador do esquema System.Data.Design.TypedDataSetSchemaImporterExtension.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dtsQualidade")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dtsQualidade : global::System.Data.DataSet {
        
        private dtbQualidadeDataTable tabledtbQualidade;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtsQualidade() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dtsQualidade(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtbQualidade"] != null)) {
                    base.Tables.Add(new dtbQualidadeDataTable(ds.Tables["dtbQualidade"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbQualidadeDataTable dtbQualidade {
            get {
                return this.tabledtbQualidade;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dtsQualidade cln = ((dtsQualidade)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtbQualidade"] != null)) {
                    base.Tables.Add(new dtbQualidadeDataTable(ds.Tables["dtbQualidade"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtbQualidade = ((dtbQualidadeDataTable)(base.Tables["dtbQualidade"]));
            if ((initTable == true)) {
                if ((this.tabledtbQualidade != null)) {
                    this.tabledtbQualidade.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dtsQualidade";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dtsQualidade.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("en-US");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtbQualidade = new dtbQualidadeDataTable();
            base.Tables.Add(this.tabledtbQualidade);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbQualidade() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dtsQualidade ds = new dtsQualidade();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtbQualidadeRowChangeEventHandler(object sender, dtbQualidadeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbQualidadeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCod_Qualidade;
            
            private global::System.Data.DataColumn columnDescricao;
            
            private global::System.Data.DataColumn columnCod_Motivo_Falha;
            
            private global::System.Data.DataColumn columnIndica_Am;
            
            private global::System.Data.DataColumn columnIndica_Am_Futuro;
            
            private global::System.Data.DataColumn columnIndica_Calculo;
            
            private global::System.Data.DataColumn columnIndica_Comprovante;
            
            private global::System.Data.DataColumn columnIndica_Demanda;
            
            private global::System.Data.DataColumn columnIndica_Horario;
            
            private global::System.Data.DataColumn columnIndica_Roteiro;
            
            private global::System.Data.DataColumn columnIndica_Parametro;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbQualidadeDataTable() {
                this.TableName = "dtbQualidade";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbQualidadeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbQualidadeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_QualidadeColumn {
                get {
                    return this.columnCod_Qualidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescricaoColumn {
                get {
                    return this.columnDescricao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_Motivo_FalhaColumn {
                get {
                    return this.columnCod_Motivo_Falha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_AmColumn {
                get {
                    return this.columnIndica_Am;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_Am_FuturoColumn {
                get {
                    return this.columnIndica_Am_Futuro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_CalculoColumn {
                get {
                    return this.columnIndica_Calculo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_ComprovanteColumn {
                get {
                    return this.columnIndica_Comprovante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_DemandaColumn {
                get {
                    return this.columnIndica_Demanda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_HorarioColumn {
                get {
                    return this.columnIndica_Horario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_RoteiroColumn {
                get {
                    return this.columnIndica_Roteiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Indica_ParametroColumn {
                get {
                    return this.columnIndica_Parametro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbQualidadeRow this[int index] {
                get {
                    return ((dtbQualidadeRow)(this.Rows[index]));
                }
            }
            
            public event dtbQualidadeRowChangeEventHandler dtbQualidadeRowChanging;
            
            public event dtbQualidadeRowChangeEventHandler dtbQualidadeRowChanged;
            
            public event dtbQualidadeRowChangeEventHandler dtbQualidadeRowDeleting;
            
            public event dtbQualidadeRowChangeEventHandler dtbQualidadeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbQualidadeRow(dtbQualidadeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbQualidadeRow AdddtbQualidadeRow(string Cod_Qualidade, string Descricao, string Cod_Motivo_Falha, bool Indica_Am, bool Indica_Am_Futuro, bool Indica_Calculo, bool Indica_Comprovante, bool Indica_Demanda, bool Indica_Horario, bool Indica_Roteiro, bool Indica_Parametro) {
                dtbQualidadeRow rowdtbQualidadeRow = ((dtbQualidadeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cod_Qualidade,
                        Descricao,
                        Cod_Motivo_Falha,
                        Indica_Am,
                        Indica_Am_Futuro,
                        Indica_Calculo,
                        Indica_Comprovante,
                        Indica_Demanda,
                        Indica_Horario,
                        Indica_Roteiro,
                        Indica_Parametro};
                rowdtbQualidadeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbQualidadeRow);
                return rowdtbQualidadeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbQualidadeDataTable cln = ((dtbQualidadeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbQualidadeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCod_Qualidade = base.Columns["Cod_Qualidade"];
                this.columnDescricao = base.Columns["Descricao"];
                this.columnCod_Motivo_Falha = base.Columns["Cod_Motivo_Falha"];
                this.columnIndica_Am = base.Columns["Indica_Am"];
                this.columnIndica_Am_Futuro = base.Columns["Indica_Am_Futuro"];
                this.columnIndica_Calculo = base.Columns["Indica_Calculo"];
                this.columnIndica_Comprovante = base.Columns["Indica_Comprovante"];
                this.columnIndica_Demanda = base.Columns["Indica_Demanda"];
                this.columnIndica_Horario = base.Columns["Indica_Horario"];
                this.columnIndica_Roteiro = base.Columns["Indica_Roteiro"];
                this.columnIndica_Parametro = base.Columns["Indica_Parametro"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCod_Qualidade = new global::System.Data.DataColumn("Cod_Qualidade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Qualidade);
                this.columnDescricao = new global::System.Data.DataColumn("Descricao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescricao);
                this.columnCod_Motivo_Falha = new global::System.Data.DataColumn("Cod_Motivo_Falha", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Motivo_Falha);
                this.columnIndica_Am = new global::System.Data.DataColumn("Indica_Am", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Am);
                this.columnIndica_Am_Futuro = new global::System.Data.DataColumn("Indica_Am_Futuro", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Am_Futuro);
                this.columnIndica_Calculo = new global::System.Data.DataColumn("Indica_Calculo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Calculo);
                this.columnIndica_Comprovante = new global::System.Data.DataColumn("Indica_Comprovante", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Comprovante);
                this.columnIndica_Demanda = new global::System.Data.DataColumn("Indica_Demanda", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Demanda);
                this.columnIndica_Horario = new global::System.Data.DataColumn("Indica_Horario", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Horario);
                this.columnIndica_Roteiro = new global::System.Data.DataColumn("Indica_Roteiro", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Roteiro);
                this.columnIndica_Parametro = new global::System.Data.DataColumn("Indica_Parametro", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndica_Parametro);
                this.columnCod_Qualidade.AllowDBNull = false;
                this.columnCod_Qualidade.MaxLength = 3;
                this.columnDescricao.MaxLength = 30;
                this.columnCod_Motivo_Falha.MaxLength = 3;
                this.columnIndica_Am.AllowDBNull = false;
                this.columnIndica_Am_Futuro.AllowDBNull = false;
                this.columnIndica_Calculo.AllowDBNull = false;
                this.columnIndica_Comprovante.AllowDBNull = false;
                this.columnIndica_Demanda.AllowDBNull = false;
                this.columnIndica_Horario.AllowDBNull = false;
                this.columnIndica_Roteiro.AllowDBNull = false;
                this.columnIndica_Parametro.AllowDBNull = false;
                this.columnIndica_Parametro.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbQualidadeRow NewdtbQualidadeRow() {
                return ((dtbQualidadeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbQualidadeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbQualidadeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbQualidadeRowChanged != null)) {
                    this.dtbQualidadeRowChanged(this, new dtbQualidadeRowChangeEvent(((dtbQualidadeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbQualidadeRowChanging != null)) {
                    this.dtbQualidadeRowChanging(this, new dtbQualidadeRowChangeEvent(((dtbQualidadeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbQualidadeRowDeleted != null)) {
                    this.dtbQualidadeRowDeleted(this, new dtbQualidadeRowChangeEvent(((dtbQualidadeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbQualidadeRowDeleting != null)) {
                    this.dtbQualidadeRowDeleting(this, new dtbQualidadeRowChangeEvent(((dtbQualidadeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbQualidadeRow(dtbQualidadeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dtsQualidade ds = new dtsQualidade();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbQualidadeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbQualidadeRow : global::System.Data.DataRow {
            
            private dtbQualidadeDataTable tabledtbQualidade;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbQualidadeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbQualidade = ((dtbQualidadeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Qualidade {
                get {
                    return ((string)(this[this.tabledtbQualidade.Cod_QualidadeColumn]));
                }
                set {
                    this[this.tabledtbQualidade.Cod_QualidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descricao {
                get {
                    try {
                        return ((string)(this[this.tabledtbQualidade.DescricaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Descricao\' na tabela \'dtbQualidade\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbQualidade.DescricaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cod_Motivo_Falha {
                get {
                    try {
                        return ((string)(this[this.tabledtbQualidade.Cod_Motivo_FalhaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'Cod_Motivo_Falha\' na tabela \'dtbQualidade\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtbQualidade.Cod_Motivo_FalhaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Am {
                get {
                    return ((bool)(this[this.tabledtbQualidade.Indica_AmColumn]));
                }
                set {
                    this[this.tabledtbQualidade.Indica_AmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Am_Futuro {
                get {
                    return ((bool)(this[this.tabledtbQualidade.Indica_Am_FuturoColumn]));
                }
                set {
                    this[this.tabledtbQualidade.Indica_Am_FuturoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Calculo {
                get {
                    return ((bool)(this[this.tabledtbQualidade.Indica_CalculoColumn]));
                }
                set {
                    this[this.tabledtbQualidade.Indica_CalculoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Comprovante {
                get {
                    return ((bool)(this[this.tabledtbQualidade.Indica_ComprovanteColumn]));
                }
                set {
                    this[this.tabledtbQualidade.Indica_ComprovanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Demanda {
                get {
                    return ((bool)(this[this.tabledtbQualidade.Indica_DemandaColumn]));
                }
                set {
                    this[this.tabledtbQualidade.Indica_DemandaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Horario {
                get {
                    return ((bool)(this[this.tabledtbQualidade.Indica_HorarioColumn]));
                }
                set {
                    this[this.tabledtbQualidade.Indica_HorarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Roteiro {
                get {
                    return ((bool)(this[this.tabledtbQualidade.Indica_RoteiroColumn]));
                }
                set {
                    this[this.tabledtbQualidade.Indica_RoteiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Indica_Parametro {
                get {
                    return ((bool)(this[this.tabledtbQualidade.Indica_ParametroColumn]));
                }
                set {
                    this[this.tabledtbQualidade.Indica_ParametroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescricaoNull() {
                return this.IsNull(this.tabledtbQualidade.DescricaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescricaoNull() {
                this[this.tabledtbQualidade.DescricaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_Motivo_FalhaNull() {
                return this.IsNull(this.tabledtbQualidade.Cod_Motivo_FalhaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_Motivo_FalhaNull() {
                this[this.tabledtbQualidade.Cod_Motivo_FalhaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbQualidadeRowChangeEvent : global::System.EventArgs {
            
            private dtbQualidadeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbQualidadeRowChangeEvent(dtbQualidadeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbQualidadeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void spuCarregarCompletedEventHandler(object sender, spuCarregarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class spuCarregarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal spuCarregarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public dtsQualidade Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((dtsQualidade)(this.results[0]));
            }
        }
    }
}
